#include "Tracks.h"

Tracks::Tracks(ShaderProgram *shader, char side)
{
	std::vector <GLfloat> newVertices;

	std::vector<GLuint> newIndices = {
	0, 1, 2,
	1, 2, 3,
	4, 5, 6,
	5, 6, 7,
	0, 1, 8,
	1, 8, 9,
	4, 5, 12,
	5, 12, 13,
	0, 2, 8,
	2, 8, 10,
	4, 6, 12,
	6, 12, 14,
	1, 3, 9,
	3, 9, 11,
	5, 7, 13,
	7, 13, 15,
	2, 3, 10,
	3, 10, 11,
	6, 7, 14,
	7, 14, 15,
	8, 9, 16,
	9, 16, 17,
	12, 13, 20,
	13, 20, 21,
	8, 10, 16,
	10, 16, 18,
	12, 14, 20,
	14, 20, 22,
	9, 11, 17,
	11, 17, 19,
	13, 15, 21,
	15, 21, 23,
	10, 11, 18,
	11, 18, 19,
	14, 15, 22,
	15, 22, 23,
	16, 17, 18,
	17, 18, 19,
	20, 21, 22,
	21, 22, 23,
	};

	if (side == 'L')
	{
		newVertices = {
			// coordinates			// color			// textures
			-2.0f, 0.5f, 0.42f,		0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 0
			-2.0f, 0.5f, 0.4f,		0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 1
			-2.0f, 0.52f, 0.42f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 2
			-2.0f, 0.52f, 0.4f,		0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 3
			-2.0f, 0.5f, 0.2f,		0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 4
			-2.0f, 0.5f, 0.18f,		0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 5
			-2.0f, 0.52f, 0.2f,		0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 6
			-2.0f, 0.52f, 0.18f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 7
			0.25f, -0.64f, 0.42f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 8
			0.25f, -0.64f, 0.4f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 9
			0.25f, -0.62f, 0.42f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 10
			0.25f, -0.62f, 0.4f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 11
			0.25f, -0.64f, 0.2f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 12
			0.25f, -0.64f, 0.18f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 13
			0.25f, -0.62f, 0.2f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 14
			0.25f, -0.62f, 0.18f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 15
			0.75f, -0.64f, 0.42f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 16
			0.75f, -0.64f, 0.4f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 17
			0.75f, -0.62f, 0.42f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 18
			0.75f, -0.62f, 0.4f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 19
			0.75f, -0.64f, 0.2f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 20
			0.75f, -0.64f, 0.18f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 21
			0.75f, -0.62f, 0.2f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 22
			0.75f, -0.62f, 0.18f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 23
		};
	}

	else if (side == 'R')
	{
		newVertices = {
			// coordinates			// color			// texture
			-2.0f, 0.5f, -0.18f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 0
			-2.0f, 0.5f, -0.2f,		0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 1
			-2.0f, 0.52f, -0.18f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 2
			-2.0f, 0.52f, -0.2f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 3
			-2.0f, 0.5f, -0.4f,		0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 4
			-2.0f, 0.5f, -0.42f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 5
			-2.0f, 0.52f, -0.4f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 6
			-2.0f, 0.52f, -0.42f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 7
			0.25f, -0.64f, -0.18f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 8
			0.25f, -0.64f, -0.2f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 9
			0.25f, -0.62f, -0.18f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 10
			0.25f, -0.62f, -0.2f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 11
			0.25f, -0.64f, -0.4f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 12
			0.25f, -0.64f, -0.42f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 13
			0.25f, -0.62f, -0.4f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 14
			0.25f, -0.62f, -0.42f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 15
			0.75f, -0.64f, -0.18f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 16
			0.75f, -0.64f, -0.2f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 17
			0.75f, -0.62f, -0.18f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 18
			0.75f, -0.62f, -0.2f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 19
			0.75f, -0.64f, -0.4f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 20
			0.75f, -0.64f, -0.42f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 21
			0.75f, -0.62f, -0.4f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 22
			0.75f, -0.62f, -0.42f,	0.0f, 0.0f, 0.0f,	0.0f, 0.0f,		// 23
		};
	}

	this->tracks = new Object(newVertices, newIndices, NULL, shader);
}

void Tracks::draw(glm::mat4 transformMatrix) 
{
	this->tracks->draw(transformMatrix);
}